version: '3.3'

services:
    
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: chronos-zookeeper_1
    ports:
      - "2181:2181"
      
  kafka:
    image: wurstmeister/kafka
    container_name: chronos-kafka_1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - ./env/kafka.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      
  pipelinedb:
    image: tkanos/pipelinedb_kafka
    container_name: chronos-pipelinedb_1
    ports:
      - "5432:5432"
    links:
      - zookeeper
      - kafka
      
  kafka-manager:
    image: kafkamanager/kafka-manager:latest
    container_name: chronos-kafka-manager_1
    env_file:
      - ./env/kafka_manager.env
    ports:
      - "9000:9000"
    links:
      - zookeeper:zookeeper
      - kafka:kafka
      
  php:
    container_name: chronos-pipeline_php_1
    build:
      context:
        ./php
      dockerfile:
        ./.docker/Dockerfile
    links:
      - kafka
      - zookeeper
    volumes:
      - ./php/app:/app
    ports:
      - "8000:8000"
      
  grafana:
    image: grafana/grafana:latest
    container_name: chronos-grafana
    restart: unless-stopped
    links:
      - pipelinedb
    env_file:
      - ./env/grafana.env
    ports:
      - "3000:3000"
      
      